# Main workflow.

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aurora_uix_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@5304e04ea2b355f03681464e683d92e3b2f18451 # v1.18.2
      with:
        elixir-version: '1.17.3' # [Required] Define the Elixir version
        otp-version: '27.1.2'      # [Required] Define the Erlang/OTP version

    - name: Restore dependencies cache
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

    - if: ${{steps.cache-deps.outputs.cache-hit != 'true' }}
      name: Install dependencies
      run: mix deps.get

    - name: Check consistency
      run: mix consistency

    - name: create db and migration
      run: mix test.task ecto.create
    
    - name: create tables
      run: mix test.task ecto.migrate 
    
    - name: Run tests
      run: mix test
